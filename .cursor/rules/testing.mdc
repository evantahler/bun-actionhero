---
description:
globs:
alwaysApply: true
---
# Testing

Information about running and writing tests.

## Running Tests

### Backend Tests
```bash
cd backend
bun test                           # Run all tests
bun test __tests__/path/file.test.ts  # Run specific test file
```

### Frontend Tests
```bash
cd frontend
bun test                           # Run all tests
bun test __tests__/path/file.test.ts  # Run specific test file
```

## Test Structure
- Tests must be run from their respective directories (backend or frontend)
- For HTTP tests:
  - DELETE/POST/PUT requests need a body (at least "{}")
  - GET requests should not include a body
  - Include "Content-Type": "application/json" in headers when sending JSON
  - For authenticated endpoints, include session cookie in headers
- Clean up test data in afterAll blocks
- Use beforeAll for test setup and data creation
- Test both success and failure cases
- Verify side effects (e.g., checking session destruction by attempting protected endpoint access)

## Test Database
- Tests use a separate database: `bun-test`
- Database is automatically created when needed
- Each test should clean up after itself

## Debugging Tests
- Add `console.log()` statements
- Use Cursor's debugger
- Run specific test files to isolate issues

## Linting
After modifying any file, confirm that the file conforms to our linting standards with `bun lint`.  The fixes can likely be applied with `bun format`
